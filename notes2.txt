import React, { useState, useEffect } from "react";
import { CCheckbox } from "../../../components/CircularCheckbox/CCheckbox";
import Modal from "../../../components/Modal/Modal";
import styles from "./StartDesignFrame.module.css";
const StartDesignFrame = () => {
  const [modalFields, setModalFields] = useState({});
  const [count, setCount] = useState(0);
  const [currStepperData, setCurrStepperData] = useState({
    id: "",
    name: "",
    heading: "",
    type: "",
    options: [],
  });

  const [startDesignFrameStep, setStartDesignFrameStep] = useState(1);

  const [designFields, setDesignFields] = useState({});
  const [designCount, setDesignCount] = useState(0);
  const [designStepperData, setDesignStepperData] = useState({
    id: "",
    name: "",
    heading: "",
    type: "",
    options: [],
  });

  


  const data = [
    {
      id: 1,
      name: "typeOfDesign",
      heading: "Select among the following?",
      type: "radio",
      options: [
        "Residential Design",
        "Commercial Design",
        "Architecture",
        "Landscaping",
        "Restaurant Design",
        "Office Design",
      ],
    },
  ];

  const residentialDesignData = [
    {
      id: 1,
      heading: "Which city is the property located at?",
      placeholder: "Enter your City",
      type: "text",
    },
    {
      id: 2,
      heading: "What is the property type?",
      type: "radio",
      name: "propertyType",
      options: ["Flat", "House"],
    },
    {
      id: 3,
      heading: "Which rooms do you wish to design?",
      type: "radio",
      name: "designType",
      options: ["Only one house", "Full house"],
    },
  ];

  const commercialDesignData = [
    {
      id: 1,
      heading: "Which city is the property located at?",
      placeholder: "Enter your City",
      type: "text",
    },
    {
      id: 2,
      heading: "What is the property type?",
      type: "radio",
      options: ["Flat", "House"],
    },
    {
      id: 3,
      heading: "Which rooms do you wish to design?",
      type: "radio",
      options: ["Only one house", "Full house"],
    },
  ];

  const architectureData = [
    {
      id: 1,
      heading: "Which city is the property located at?",
      placeholder: "Enter your City",
      type: "text",
    },
    {
      id: 2,
      heading: "What is the property type?",
      type: "radio",
      options: [
        "Residential Building",
        "Commercial Building",
        "Institute Building",
      ],
    },
    {
      id: 3,
      heading: "Which rooms do you wish to design?",
      type: "radio",
      options: ["Only one house", "Full house"],
    },
  ];

  const landscapingData = [
    {
      id: 1,
      heading: "Which city is the property located at?",
      placeholder: "Enter your City",
      type: "text",
    },
  ];

  const restaurantDesignData = [
    {
      id: 1,
      heading: "Which city is the property located at?",
      placeholder: "Enter your City",
      type: "text",
    },
  ];

  const officeDesignData = [
    {
      id: 1,
      heading: "Which city is the property located at?",
      placeholder: "Enter your City",
      type: "text",
    },
    {
      id: 2,
      heading: "What is the property type?",
      type: "radio",
      options: ["Standalone office", "Complex"],
    },
    {
      id: 3,
      heading: "Which blocks do you wish to design?",
      type: "radio",
      options: ["Only one", "Full complex"],
    },
  ];

  const handleBoxChange = (name, val) => {
    // let { name } = e.target;
    console.log("name", name);
    console.log("val", val);
    setModalFields({ ...modalFields, [name]: val });
    setDesignFields({ ...designFields, [name]: val });
  };

  console.log("moda", modalFields);

  useEffect(() => {
    setCurrStepperData(data[count]);
  }, [count]);

  useEffect(() => {
    setDesignStepperData(residentialDesignData[designCount]);
  }, [designCount]);

  const incCount = () => {
    if (count !== data.length - 1) {
      setCount(count + 1);
    } else {
      setStartDesignFrameStep(startDesignFrameStep + 1);
      if (modalFields.typeOfDesign === "Residential Design") {
        // setDesignStepperData(residentialDesignData);
      }
      console.log("designStepperData", designStepperData);
    }
    if (designCount !== residentialDesignData.length - 1) {
      setDesignCount(designCount + 1);
    } else {
      setDesignCount(designCount);
    }
  };

  const decCount = () => {
    console.log("designStepperData Else", designStepperData);
    if (count > 0) {
      setCount(count - 1);
    } else return;

    if (designCount > 0) {
      setDesignCount(designCount - 1);
    } else return;
  };

  return (
    <>
      <Modal
        description={`${currStepperData.heading}`}
        className="text-[16px] sm:text-[32px]"
        body={
          <>
            {startDesignFrameStep === 1 && (
              <>
                {currStepperData.options.map((ele, i) => {
                  return (
                    // <div key={i} className={styles.input_div}>
                    <div key={i}>
                      <input
                        type={ele.type}
                        aria-hidden
                        name={currStepperData.name}
                        id={i}
                        hidden
                      />
                      <label
                        htmlFor={i}
                        onClick={() => {
                          handleBoxChange(currStepperData.name, ele);
                        }}
                        style={{
                          borderColor: `${
                            modalFields[currStepperData.name] === ele
                              ? "#F36C25"
                              : ""
                          }`,
                        }}
                        className={styles.checkbox_label}
                      >
                        <CCheckbox
                          checked={modalFields[currStepperData.name] === ele}
                        />
                        <p
                          className={styles.checkbox_text}
                          style={{
                            color: `${
                              modalFields[currStepperData.name] === ele
                                ? ""
                                : "#939CA3"
                            }`,
                          }}
                        >
                          {ele}
                        </p>
                      </label>
                    </div>
                  );
                })}
              </>
            )}
            {startDesignFrameStep === 2 && (
              <>
                {designStepperData.type === "text" ? (
                  <input
                    type={`${designStepperData.type}`}
                    // onChange={handleChange}
                    // value={designStepperData.name}
                    name={designStepperData.name}
                    placeholder={designStepperData.placeholder}
                    // id={}
                    className={styles.text_inp}
                    autoComplete="off"
                  />
                ) : (
                  <>
                    {designStepperData.options.map((designdata, i) => (
                      <div key={i}>
                        <input
                          type={designdata.type}
                          aria-hidden
                          name={designStepperData.name}
                          id={i}
                          hidden
                        />
                        <label
                          htmlFor={i}
                          onClick={() => {
                            handleBoxChange(designStepperData.name, designdata);
                          }}
                          style={{
                            borderColor: `${
                              designFields[designStepperData.name] ===
                              designdata
                                ? "#F36C25"
                                : ""
                            }`,
                          }}
                          className={styles.checkbox_label}
                        >
                          <CCheckbox
                            checked={
                              designFields[designStepperData.name] ===
                              designdata
                            }
                          />
                          <p
                            className={styles.checkbox_text}
                            style={{
                              color: `${
                                designFields[designStepperData.name] ===
                                designdata
                                  ? ""
                                  : "#939CA3"
                              }`,
                            }}
                          >
                            {designdata}
                          </p>
                        </label>
                      </div>
                    ))}
                  </>
                )}
              </>
            )}
          </>
        }
        footer={
          <div className={styles.bottom}>
            <p className={styles.back} onClick={decCount}>
              Back
            </p>
            {count === currStepperData.length ? (
              <button className={styles.btn}>Continue</button>
            ) : (
              <button
                className={styles.btn}
                onClick={incCount}
                disabled={
                  currStepperData.name &&
                  currStepperData[`${currStepperData.name}`]?.length === 0
                    ? true
                    : false
                }
              >
                Next
              </button>
            )}
          </div>
        }
      />
    </>
  );
};

export default StartDesignFrame;
